{"ast":null,"code":"import _slicedToArray from \"/Users/shem/Documents/Dev/noti-game/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/shem/Documents/Dev/noti-game/src/components/Noficitaions/index.js\";\nimport React, { useState } from 'react';\nimport { Swipe } from 'react-swipe-component';\nimport { NotificationBox } from './style';\nimport { BOX_HEIGHT, BOX_WIDTH } from '../consts';\nimport { useInterval } from '../utilis';\nexport const Notifications = () => {\n  //const\n  const availSpaceY = window.innerHeight - BOX_HEIGHT;\n  const availSpaceX = window.innerWidth - BOX_WIDTH;\n\n  const getX = () => Math.round(Math.random() * availSpaceY);\n\n  const getY = () => Math.round(Math.random() * availSpaceX); //Hooks state\n\n\n  const _useState = useState(2000),\n        _useState2 = _slicedToArray(_useState, 2),\n        delay = _useState2[0],\n        setDelay = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        notification = _useState4[0],\n        setNotification = _useState4[1];\n\n  const _useState5 = useState([{\n    x: getX(),\n    y: getY()\n  }]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        locations = _useState6[0],\n        setLocations = _useState6[1]; // Increment the counter.\n\n\n  useInterval(() => {\n    setLocations([...locations, {\n      x: getX(),\n      y: getY()\n    }]);\n  }, delay); // Make it faster every second!\n\n  useInterval(() => {\n    if (delay > 10) {\n      setDelay(delay / 1.5);\n    }\n  }, 10000);\n\n  const handleReset = () => {\n    setDelay(1000);\n  };\n\n  return React.createElement(React.Fragment, null, locations.map((location, idx) => React.createElement(Swipe, {\n    key: idx,\n    onSwipedLeft: () => console.log('swipe left'),\n    onSwipedRight: () => console.log('swipe right'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(NotificationBox, {\n    top: location.x,\n    left: location.y,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, locations.length))));\n};","map":{"version":3,"sources":["/Users/shem/Documents/Dev/noti-game/src/components/Noficitaions/index.js"],"names":["React","useState","Swipe","NotificationBox","BOX_HEIGHT","BOX_WIDTH","useInterval","Notifications","availSpaceY","window","innerHeight","availSpaceX","innerWidth","getX","Math","round","random","getY","delay","setDelay","notification","setNotification","x","y","locations","setLocations","handleReset","map","location","idx","console","log","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,uBAAtB;AAEA,SAASC,eAAT,QAAgC,SAAhC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,WAAtC;AACA,SAASC,WAAT,QAA4B,WAA5B;AAGA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC;AACA,QAAMC,WAAW,GAAGC,MAAM,CAACC,WAAP,GAAqBN,UAAzC;AACA,QAAMO,WAAW,GAAGF,MAAM,CAACG,UAAP,GAAoBP,SAAxC;;AACA,QAAMQ,IAAI,GAAG,MAAMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBR,WAA3B,CAAnB;;AACA,QAAMS,IAAI,GAAG,MAAMH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,WAA3B,CAAnB,CALiC,CAOjC;;;AAPiC,oBAQPV,QAAQ,CAAC,IAAD,CARD;AAAA;AAAA,QAQ1BiB,KAR0B;AAAA,QAQnBC,QARmB;;AAAA,qBASOlB,QAAQ,EATf;AAAA;AAAA,QAS1BmB,YAT0B;AAAA,QASZC,eATY;;AAAA,qBAUCpB,QAAQ,CAAC,CAAC;AAAEqB,IAAAA,CAAC,EAACT,IAAI,EAAR;AAAYU,IAAAA,CAAC,EAACN,IAAI;AAAlB,GAAD,CAAD,CAVT;AAAA;AAAA,QAU1BO,SAV0B;AAAA,QAUfC,YAVe,kBAe/B;;;AACFnB,EAAAA,WAAW,CAAC,MAAM;AAChBmB,IAAAA,YAAY,CAAC,CACX,GAAGD,SADQ,EAEX;AACEF,MAAAA,CAAC,EAAET,IAAI,EADT;AAEEU,MAAAA,CAAC,EAAEN,IAAI;AAFT,KAFW,CAAD,CAAZ;AAQD,GATU,EASRC,KATQ,CAAX,CAhBiC,CA2BjC;;AACAZ,EAAAA,WAAW,CAAC,MAAM;AAChB,QAAIY,KAAK,GAAG,EAAZ,EAAgB;AACdC,MAAAA,QAAQ,CAACD,KAAK,GAAG,GAAT,CAAR;AACD;AACF,GAJU,EAIR,KAJQ,CAAX;;AAMA,QAAMQ,WAAW,GAAG,MAAM;AACxBP,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD;;AAIA,SACE,0CAEIK,SAAS,CAACG,GAAV,CAAc,CAACC,QAAD,EAAWC,GAAX,KACZ,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEA,GAAZ;AAAiB,IAAA,YAAY,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAArC;AAAgE,IAAA,aAAa,EAAE,MAAMD,OAAO,CAACC,GAAR,CAAY,aAAZ,CAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAiB,IAAA,GAAG,EAAEH,QAAQ,CAACN,CAA/B;AAAkC,IAAA,IAAI,EAAEM,QAAQ,CAACL,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,SAAS,CAACQ,MADb,CADF,CADF,CAFJ,CADF;AAaD,CAnDM","sourcesContent":["import React, { useState } from 'react';\nimport { Swipe } from 'react-swipe-component'\n\nimport { NotificationBox } from './style';\nimport { BOX_HEIGHT, BOX_WIDTH } from '../consts';\nimport { useInterval } from '../utilis';\n\n\nexport const Notifications = () => {\n  //const\n  const availSpaceY = window.innerHeight - BOX_HEIGHT;\n  const availSpaceX = window.innerWidth - BOX_WIDTH;\n  const getX = () => Math.round(Math.random() * availSpaceY);\n  const getY = () => Math.round(Math.random() * availSpaceX);\n\n  //Hooks state\n  const [delay, setDelay] = useState(2000);\n  const [notification, setNotification] = useState();\n  const [locations, setLocations] = useState([{ x:getX(), y:getY() }]);\n\n\n  \n\n    // Increment the counter.\n  useInterval(() => {\n    setLocations([\n      ...locations,\n      {\n        x: getX(),\n        y: getY()\n      }\n    ]);\n\n  }, delay);\n\n  // Make it faster every second!\n  useInterval(() => {\n    if (delay > 10) {\n      setDelay(delay / 1.5);\n    }\n  }, 10000);\n\n  const handleReset = () => {\n    setDelay(1000);\n  };\n\n  return (\n    <>\n      {\n        locations.map((location, idx) => (\n          <Swipe key={idx} onSwipedLeft={() => console.log('swipe left')} onSwipedRight={() => console.log('swipe right')}>\n            <NotificationBox top={location.x} left={location.y}>\n              {locations.length}\n            </NotificationBox>\n          </Swipe>\n        ))\n      }\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}