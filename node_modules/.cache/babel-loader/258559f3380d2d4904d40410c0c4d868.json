{"ast":null,"code":"import _slicedToArray from \"/Users/shem/Documents/Dev/noti-game/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/shem/Documents/Dev/noti-game/src/components/Noficitaions/index.js\";\nimport React, { useState } from 'react';\nimport { Swipe } from 'react-swipe-component';\nimport { NotificationBox } from './style';\nimport { BOX_HEIGHT, BOX_WIDTH, skills } from '../consts';\nimport { useInterval } from '../utilis';\nexport const Notifications = () => {\n  //const\n  const availSpaceY = window.innerHeight - BOX_HEIGHT;\n  const availSpaceX = window.innerWidth - BOX_WIDTH;\n\n  const getX = () => Math.round(Math.random() * availSpaceY);\n\n  const getY = () => Math.round(Math.random() * availSpaceX);\n\n  const getRandomInt = max => Math.floor(Math.random() * Math.floor(max)); //Hooks state\n\n\n  const _useState = useState(2000),\n        _useState2 = _slicedToArray(_useState, 2),\n        delay = _useState2[0],\n        setDelay = _useState2[1];\n\n  const _useState3 = useState([...Array(60).keys()]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        notification = _useState4[0],\n        setNotification = _useState4[1];\n\n  const _useState5 = useState([{\n    x: getX(),\n    y: getY()\n  }]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        locations = _useState6[0],\n        setLocations = _useState6[1];\n\n  const _useState7 = useState({\n    0: '',\n    1: ''\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        currNotification = _useState8[0],\n        setCurrNotification = _useState8[1];\n\n  useInterval(() => {\n    setLocations([...locations, {\n      x: getX(),\n      y: getY()\n    }]);\n    const notificationNumber = notification[getRandomInt(notification.length)].toString();\n    if (notificationNumber.length === 1) setCurrNotification({\n      0: '0',\n      1: notificationNumber\n    });else setCurrNotification({\n      0: notificationNumber[0],\n      1: notificationNumber[1]\n    });\n    setNotification(notification.filter((_, idx) => idx !== +notificationNumber));\n  }, delay); // Make it faster every second!\n\n  useInterval(() => {\n    if (delay > 10) {\n      setDelay(delay / 1.5);\n    }\n  }, 10000);\n\n  const handleReset = () => {\n    setDelay(1000);\n  };\n\n  return currNotification[0] ? React.createElement(React.Fragment, null, locations.map((location, idx) => React.createElement(Swipe, {\n    key: idx,\n    onSwipedLeft: () => console.log('swipe left'),\n    onSwipedRight: () => console.log('swipe right'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(NotificationBox, {\n    top: location.x,\n    left: location.y,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, console.log(skills, currNotification), skills[currNotification[0]].tools[currNotification[1]])))) : null;\n};","map":{"version":3,"sources":["/Users/shem/Documents/Dev/noti-game/src/components/Noficitaions/index.js"],"names":["React","useState","Swipe","NotificationBox","BOX_HEIGHT","BOX_WIDTH","skills","useInterval","Notifications","availSpaceY","window","innerHeight","availSpaceX","innerWidth","getX","Math","round","random","getY","getRandomInt","max","floor","delay","setDelay","Array","keys","notification","setNotification","x","y","locations","setLocations","currNotification","setCurrNotification","notificationNumber","length","toString","filter","_","idx","handleReset","map","location","console","log","tools"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Swipe } from 'react-swipe-component'\n\nimport { NotificationBox } from './style';\nimport { BOX_HEIGHT, BOX_WIDTH, skills } from '../consts';\nimport { useInterval } from '../utilis';\n\nexport const Notifications = () => {\n  //const\n  const availSpaceY = window.innerHeight - BOX_HEIGHT;\n  const availSpaceX = window.innerWidth - BOX_WIDTH;\n  const getX = () => Math.round(Math.random() * availSpaceY);\n  const getY = () => Math.round(Math.random() * availSpaceX);\n  const getRandomInt = max => Math.floor(Math.random() * Math.floor(max));\n\n\n  //Hooks state\n  const [delay, setDelay] = useState(2000);\n  const [notification, setNotification] = useState([...Array(60).keys()]);\n  const [locations, setLocations] = useState([{ x:getX(), y:getY() }]);\n  const [currNotification, setCurrNotification] = useState({0:'',1:''});\n\n  useInterval(() => {\n    setLocations([\n      ...locations,\n      {\n        x: getX(),\n        y: getY()\n      }\n    ]);\n    const notificationNumber = notification[getRandomInt(notification.length)].toString();\n    if (notificationNumber.length === 1) setCurrNotification({ 0: '0', 1: notificationNumber });\n    else setCurrNotification({ 0: notificationNumber[0], 1: notificationNumber[1] });\n    setNotification(notification.filter((_, idx) => idx !== +notificationNumber));\n  }, delay);\n\n  // Make it faster every second!\n  useInterval(() => {\n    if (delay > 10) {\n      setDelay(delay / 1.5);\n    }\n  }, 10000);\n\n  const handleReset = () => {\n    setDelay(1000);\n  };\n\n  return currNotification[0] ? (\n    <>\n      {\n        locations.map((location, idx) => (\n          <Swipe key={idx} onSwipedLeft={() => console.log('swipe left')} onSwipedRight={() => console.log('swipe right')}>\n            <NotificationBox top={location.x} left={location.y}>\n              {console.log(skills,currNotification)}\n              {skills[currNotification[0]].tools[currNotification[1]]}\n            </NotificationBox>\n          </Swipe>\n        ))\n      }\n    </>\n  ): null;\n};\n"]},"metadata":{},"sourceType":"module"}