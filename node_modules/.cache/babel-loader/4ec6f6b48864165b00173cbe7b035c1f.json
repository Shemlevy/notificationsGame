{"ast":null,"code":"import _slicedToArray from \"/Users/shem/Documents/Dev/noti-game/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/shem/Documents/Dev/noti-game/src/components/Main.js\";\nimport React, { useState } from 'react';\nimport { useSwipeable, Swipeable } from 'react-swipeable';\nimport { TextProgress, JumpingBox, StartButton } from './style';\nconst availSpaceY = window.innerHeight - BOX_HEIGHT;\nconst availSpaceX = window.innerWidth - BOX_WIDTH;\nexport const Main = () => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        top = _useState2[0],\n        setTop = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        left = _useState4[0],\n        setLeft = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        start = _useState6[0],\n        setStart = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        skillNToll = _useState8[0],\n        setSkillNToll = _useState8[1];\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        categoreyFinsihed = _useState10[0],\n        setCategoreyFinsih = _useState10[1];\n\n  const startGame = () => {\n    setInterval(moveBox, 100);\n  };\n\n  const getRandomInt = max => Math.floor(Math.random() * Math.floor(max));\n\n  const moveBox = () => {\n    const randNumTop = Math.round(Math.random() * availSpaceY);\n    const randNumLeft = Math.round(Math.random() * availSpaceX);\n    setTop(randNumTop);\n    setLeft(randNumLeft);\n    let skillNo;\n    let tools = [];\n    skillNo = getRandomInt(5);\n    tools = skills[skillNo].tools;\n    if (categoreyFinsihed === 5) console.log('game over');\n    const randToolNo = getRandomInt(tools.length);\n    const randomTool = tools[randToolNo];\n    setSkillnToll({\n      skillNo,\n      tool: randomTool\n    });\n    tools.splice(randToolNo, 1);\n    if (!start) setStart(true);\n  };\n\n  const handleClick = () => {\n    const currSkill = skills[skillnToll.skillNo];\n    currSkill.setProgress(currSkill.progress + 25);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, !start ? React.createElement(StartButton, {\n    onClick: startGame,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"START GAME\") : React.createElement(JumpingBox, {\n    top: top,\n    left: left,\n    boxWidth: BOX_WIDTH,\n    boxHeight: BOX_HEIGHT,\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, skillnToll.tool), skills.map(skill => React.createElement(TextProgress, {\n    key: skill.title,\n    color: skill.color,\n    progress: skill.progress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, skill.title)));\n};","map":{"version":3,"sources":["/Users/shem/Documents/Dev/noti-game/src/components/Main.js"],"names":["React","useState","useSwipeable","Swipeable","TextProgress","JumpingBox","StartButton","availSpaceY","window","innerHeight","BOX_HEIGHT","availSpaceX","innerWidth","BOX_WIDTH","Main","top","setTop","left","setLeft","start","setStart","skillNToll","setSkillNToll","categoreyFinsihed","setCategoreyFinsih","startGame","setInterval","moveBox","getRandomInt","max","Math","floor","random","randNumTop","round","randNumLeft","skillNo","tools","skills","console","log","randToolNo","length","randomTool","setSkillnToll","tool","splice","handleClick","currSkill","skillnToll","setProgress","progress","map","skill","title","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useSwipeable, Swipeable } from 'react-swipeable'\n\nimport { TextProgress, JumpingBox, StartButton } from './style';\n\n\n\nconst availSpaceY = window.innerHeight - BOX_HEIGHT;\nconst availSpaceX = window.innerWidth - BOX_WIDTH;\n\nexport const Main = () => {\n  const [top, setTop] = useState();\n  const [left, setLeft] = useState();\n  const [start, setStart] = useState(false);\n  const [skillNToll, setSkillNToll] = useState([]);\n  const [categoreyFinsihed, setCategoreyFinsih] = useState(0);\n\n\n\n  const startGame = () => {\n    setInterval(moveBox, 100);\n  };\n\n  const getRandomInt = max => Math.floor(Math.random() * Math.floor(max));\n\n  const moveBox = () => {\n    const randNumTop = Math.round(Math.random() * availSpaceY);\n    const randNumLeft = Math.round(Math.random() * availSpaceX);\n\n    setTop(randNumTop);\n    setLeft(randNumLeft);\n\n    \n    let skillNo;\n    let tools = [];\n\n      skillNo = getRandomInt(5);\n      tools = skills[skillNo].tools;\n\n\n\n    if (categoreyFinsihed === 5) console.log('game over');\n    const randToolNo = getRandomInt(tools.length);\n    const randomTool = tools[randToolNo];\n    setSkillnToll({ skillNo, tool:randomTool });\n    tools.splice(randToolNo, 1);\n    if (!start) setStart(true);\n  };\n\n  const handleClick = () => {\n    const currSkill = skills[skillnToll.skillNo];\n    \n    currSkill.setProgress(currSkill.progress + 25);\n  };\n\n  return (\n    <div>\n      {!start ? <StartButton onClick={startGame}>START GAME</StartButton> :\n        <JumpingBox top={top} left={left} boxWidth={BOX_WIDTH} boxHeight={BOX_HEIGHT} onClick={handleClick}>\n          {skillnToll.tool}\n        </JumpingBox>}\n      {skills.map((skill) => <TextProgress key={skill.title} color={skill.color} progress={skill.progress}>{skill.title}</TextProgress>)}\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}