{"ast":null,"code":"import _slicedToArray from \"/Users/shem/Documents/Dev/noti-game/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/shem/Documents/Dev/noti-game/src/components/Main.js\";\nimport React, { useState } from 'react';\nimport { TextProgress, JumpingBox, StartButton } from './style';\nexport const BOX_HEIGHT = 50;\nexport const BOX_WIDTH = 200;\nconst availSpaceY = window.innerHeight - BOX_HEIGHT;\nconst availSpaceX = window.innerWidth - BOX_WIDTH;\nexport const Main = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        catFinished = _useState2[0],\n        setCatFinished = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        top = _useState4[0],\n        setTop = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        left = _useState6[0],\n        setLeft = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        start = _useState8[0],\n        setStart = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        skillnToll = _useState10[0],\n        setSkillnToll = _useState10[1];\n\n  const _useState11 = useState(0),\n        _useState12 = _slicedToArray(_useState11, 2),\n        growthProgress = _useState12[0],\n        setGrowthProgress = _useState12[1];\n\n  const _useState13 = useState(0),\n        _useState14 = _slicedToArray(_useState13, 2),\n        esteemProgress = _useState14[0],\n        setEsteemProgress = _useState14[1];\n\n  const _useState15 = useState(0),\n        _useState16 = _slicedToArray(_useState15, 2),\n        belongProgress = _useState16[0],\n        setBelongProgress = _useState16[1];\n\n  const _useState17 = useState(0),\n        _useState18 = _slicedToArray(_useState17, 2),\n        safetyProgress = _useState18[0],\n        setSafetyProgress = _useState18[1];\n\n  const _useState19 = useState(0),\n        _useState20 = _slicedToArray(_useState19, 2),\n        energyProgress = _useState20[0],\n        setEnergyProgress = _useState20[1];\n\n  const growth = {\n    color: '#e59c99',\n    title: 'growth',\n    tools: ['good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'bad', 'bad'],\n    setProgress: setGrowthProgress,\n    progress: growthProgress\n  };\n  const esteem = {\n    color: '#e9bb5f',\n    title: 'esteem',\n    tools: ['good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'bad', 'bad'],\n    setProgress: setEsteemProgress,\n    progress: esteemProgress\n  };\n  const belong = {\n    color: '#cc6262',\n    title: 'belong',\n    tools: ['good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'bad', 'bad'],\n    setProgress: setBelongProgress,\n    progress: belongProgress\n  };\n  const safety = {\n    color: '#6c7cc9',\n    title: 'safety',\n    tools: ['good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'bad', 'bad'],\n    setProgress: setSafetyProgress,\n    progress: safetyProgress\n  };\n  const energy = {\n    color: '#a8e4e4',\n    title: 'energy',\n    tools: ['good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'bad', 'bad'],\n    setProgress: setEnergyProgress,\n    progress: energyProgress\n  };\n  const skills = [growth, esteem, belong, safety, energy];\n\n  const startGame = () => {\n    setInterval(moveBox, 100);\n  };\n\n  const getRandomInt = max => Math.floor(Math.random() * Math.floor(max));\n\n  const moveBox = () => {\n    const randNumTop = Math.round(Math.random() * availSpaceY);\n    const randNumLeft = Math.round(Math.random() * availSpaceX);\n    setTop(randNumTop);\n    setLeft(randNumLeft);\n    let skillNo;\n    let tools = [];\n\n    while (!tools.length && catFinished < 5) {\n      skillNo = getRandomInt(5);\n      tools = skills[skillNo].tools;\n      console.log({\n        catFinished,\n        tools\n      });\n      if (tools.length === 1) setCatFinished(catFinished + 1);\n    }\n\n    if (catFinished === 5) console.log('game over');\n    const randToolNo = getRandomInt(tools.length);\n    const randomTool = tools[randToolNo];\n    setSkillnToll({\n      skillNo,\n      tool: randomTool\n    });\n    tools.splice(randToolNo, 1);\n    if (!start) setStart(true);\n  };\n\n  const handleClick = () => {\n    const currSkill = skills[skillnToll.skillNo];\n    currSkill.setProgress(currSkill.progress + 25);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, !start ? React.createElement(StartButton, {\n    onClick: startGame,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"START GAME\") : React.createElement(JumpingBox, {\n    top: top,\n    left: left,\n    boxWidth: BOX_WIDTH,\n    boxHeight: BOX_HEIGHT,\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, skillnToll.tool), skills.map(skill => React.createElement(TextProgress, {\n    key: skill.title,\n    color: skill.color,\n    progress: skill.progress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, skill.title)));\n};","map":{"version":3,"sources":["/Users/shem/Documents/Dev/noti-game/src/components/Main.js"],"names":["React","useState","TextProgress","JumpingBox","StartButton","BOX_HEIGHT","BOX_WIDTH","availSpaceY","window","innerHeight","availSpaceX","innerWidth","Main","catFinished","setCatFinished","top","setTop","left","setLeft","start","setStart","skillnToll","setSkillnToll","growthProgress","setGrowthProgress","esteemProgress","setEsteemProgress","belongProgress","setBelongProgress","safetyProgress","setSafetyProgress","energyProgress","setEnergyProgress","growth","color","title","tools","setProgress","progress","esteem","belong","safety","energy","skills","startGame","setInterval","moveBox","getRandomInt","max","Math","floor","random","randNumTop","round","randNumLeft","skillNo","length","console","log","randToolNo","randomTool","tool","splice","handleClick","currSkill","map","skill"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { TextProgress, JumpingBox, StartButton } from './style';\n\nexport const BOX_HEIGHT = 50;\nexport const BOX_WIDTH = 200;\n\nconst availSpaceY = window.innerHeight - BOX_HEIGHT;\nconst availSpaceX = window.innerWidth - BOX_WIDTH;\n\nexport const Main = () => {\n  const [catFinished, setCatFinished] = useState(0);\n  const [top, setTop] = useState();\n  const [left, setLeft] = useState();\n  const [start, setStart] = useState(false);\n  const [skillnToll, setSkillnToll] = useState([]);\n\n  const [growthProgress, setGrowthProgress] = useState(0);\n  const [esteemProgress, setEsteemProgress] = useState(0);\n  const [belongProgress, setBelongProgress] = useState(0);\n  const [safetyProgress, setSafetyProgress] = useState(0);\n  const [energyProgress, setEnergyProgress] = useState(0);\n\n  const growth = {\n    color: '#e59c99',\n    title: 'growth',\n    tools: ['good','good','good','good','good','bad','bad','bad','bad','bad'],\n    setProgress: setGrowthProgress,\n    progress: growthProgress\n  };\n\n  const esteem = {\n    color: '#e9bb5f',\n    title: 'esteem',\n    tools: ['good','good','good','good','good','bad','bad','bad','bad','bad'],\n    setProgress: setEsteemProgress,\n    progress: esteemProgress\n  };\n\n  const belong = {\n    color: '#cc6262',\n    title: 'belong',\n    tools: ['good','good','good','good','good','bad','bad','bad','bad','bad'],\n    setProgress: setBelongProgress,\n    progress: belongProgress\n  };\n\n  const safety = {\n    color: '#6c7cc9',\n    title: 'safety',\n    tools: ['good','good','good','good','good','bad','bad','bad','bad','bad'],\n    setProgress: setSafetyProgress,\n    progress: safetyProgress\n  };\n\n  const energy = {\n    color: '#a8e4e4',\n    title: 'energy',\n    tools: ['good','good','good','good','good','bad','bad','bad','bad','bad'],\n    setProgress: setEnergyProgress,\n    progress: energyProgress\n  };\n\n  const skills = [growth,esteem,belong,safety,energy];\n\n  const startGame = () => {\n    setInterval(moveBox, 100);\n  };\n\n  const getRandomInt = max => Math.floor(Math.random() * Math.floor(max));\n\n  const moveBox = () => {\n    const randNumTop = Math.round(Math.random() * availSpaceY);\n    const randNumLeft = Math.round(Math.random() * availSpaceX);\n\n    setTop(randNumTop);\n    setLeft(randNumLeft);\n\n    \n    let skillNo;\n    let tools = [];\n    \n    while (!tools.length && catFinished < 5) {\n      skillNo = getRandomInt(5);\n      tools = skills[skillNo].tools;\n      console.log({catFinished, tools})\n      if (tools.length === 1) setCatFinished(catFinished + 1)\n    }\n    if (catFinished === 5) console.log('game over');\n    const randToolNo = getRandomInt(tools.length);\n    const randomTool = tools[randToolNo];\n    setSkillnToll({ skillNo, tool:randomTool });\n    tools.splice(randToolNo, 1);\n    if (!start) setStart(true);\n  };\n\n  const handleClick = () => {\n    const currSkill = skills[skillnToll.skillNo];\n    \n    currSkill.setProgress(currSkill.progress + 25);\n  };\n\n  return (\n    <div>\n      {!start ? <StartButton onClick={startGame}>START GAME</StartButton> :\n        <JumpingBox top={top} left={left} boxWidth={BOX_WIDTH} boxHeight={BOX_HEIGHT} onClick={handleClick}>\n          {skillnToll.tool}\n        </JumpingBox>}\n      {skills.map((skill) => <TextProgress key={skill.title} color={skill.color} progress={skill.progress}>{skill.title}</TextProgress>)}\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}