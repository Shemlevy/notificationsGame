{"ast":null,"code":"import _slicedToArray from \"/Users/shem/Documents/Dev/noti-game/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/shem/Documents/Dev/noti-game/src/components/Main.js\";\nimport React, { useState } from 'react';\nimport { Swipe } from 'react-swipe-component';\nimport { BOX_HEIGHT, BOX_WIDTH, skills } from './consts';\nimport { TextProgress, StartButton } from './style';\nimport { JumpingBox, exitPoints } from './JumpingBox/style';\nconst availSpaceY = window.innerHeight - BOX_HEIGHT;\nconst availSpaceX = window.innerWidth - BOX_WIDTH;\nexport const Main = () => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        top = _useState2[0],\n        setTop = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        left = _useState4[0],\n        setLeft = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        start = _useState6[0],\n        setStart = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        skillNToll = _useState8[0],\n        setSkillNToll = _useState8[1];\n\n  const startGame = () => {\n    setInterval(moveBox, 1000);\n  };\n\n  const getRandomInt = max => Math.floor(Math.random() * Math.floor(max));\n\n  const moveBox = () => {\n    const randNumTop = Math.round(Math.random() * availSpaceY);\n    const randNumLeft = Math.round(Math.random() * availSpaceX);\n    setTop(randNumTop);\n    setLeft(randNumLeft);\n    let skillNo;\n    skillNo = getRandomInt(5);\n    const tools = skills[skillNo].tools;\n    const randToolNo = getRandomInt(tools.length);\n    const randomTool = tools[randToolNo];\n    setSkillNToll({\n      skillNo,\n      tool: randomTool\n    });\n    tools.splice(randToolNo, 1);\n    if (!start) setStart(true);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, !start ? React.createElement(StartButton, {\n    onClick: startGame,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"START GAME\") : React.createElement(Swipe, {\n    onSwipedLeft: () => console.log('swipe left'),\n    onSwipedRight: () => console.log('swipe right'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(JumpingBox, {\n    location: \"topLeft\",\n    top: top,\n    left: left,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, skillNToll.tool)), skills.map(skill => React.createElement(TextProgress, {\n    key: skill.title,\n    color: skill.color,\n    progress: skill.progress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, skill.title)));\n};","map":{"version":3,"sources":["/Users/shem/Documents/Dev/noti-game/src/components/Main.js"],"names":["React","useState","Swipe","BOX_HEIGHT","BOX_WIDTH","skills","TextProgress","StartButton","JumpingBox","exitPoints","availSpaceY","window","innerHeight","availSpaceX","innerWidth","Main","top","setTop","left","setLeft","start","setStart","skillNToll","setSkillNToll","startGame","setInterval","moveBox","getRandomInt","max","Math","floor","random","randNumTop","round","randNumLeft","skillNo","tools","randToolNo","length","randomTool","tool","splice","console","log","map","skill","title","color","progress"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Swipe } from 'react-swipe-component'\n\nimport { BOX_HEIGHT, BOX_WIDTH, skills} from './consts';\nimport { TextProgress, StartButton } from './style';\nimport { JumpingBox, exitPoints } from './JumpingBox/style';\n\nconst availSpaceY = window.innerHeight - BOX_HEIGHT;\nconst availSpaceX = window.innerWidth - BOX_WIDTH;\n\nexport const Main = () => {\n  const [top, setTop] = useState();\n  const [left, setLeft] = useState();\n  const [start, setStart] = useState(false);\n  const [skillNToll, setSkillNToll] = useState([]);\n\n  const startGame = () => {\n    setInterval(moveBox, 1000);\n  };\n\n  const getRandomInt = max => Math.floor(Math.random() * Math.floor(max));\n\n  const moveBox = () => {\n    const randNumTop = Math.round(Math.random() * availSpaceY);\n    const randNumLeft = Math.round(Math.random() * availSpaceX);\n\n    setTop(randNumTop);\n    setLeft(randNumLeft);\n\n    let skillNo;\n\n    skillNo = getRandomInt(5);\n    const tools = skills[skillNo].tools;\n    const randToolNo = getRandomInt(tools.length);\n    const randomTool = tools[randToolNo];\n    setSkillNToll({ skillNo, tool:randomTool });\n    tools.splice(randToolNo, 1);\n    if (!start) setStart(true);\n  };\n\n  return (\n    <div>\n      {!start ? <StartButton onClick={startGame}>START GAME</StartButton> :\n        <Swipe onSwipedLeft={() => console.log('swipe left')} onSwipedRight={() => console.log('swipe right')}>\n          <JumpingBox location='topLeft' top={top} left={left}>\n            {skillNToll.tool}\n          </JumpingBox>\n        </Swipe>}\n      {skills.map((skill) => <TextProgress key={skill.title} color={skill.color} progress={skill.progress}>{skill.title}</TextProgress>)}\n    </div>\n  );\n};\n\n\n"]},"metadata":{},"sourceType":"module"}