{"ast":null,"code":"import _slicedToArray from \"/Users/shem/Documents/Dev/noti-game/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/shem/Documents/Dev/noti-game/src/components/Noficitaions/index.js\";\nimport React, { useState } from 'react';\nimport { Swipe } from 'react-swipe-component';\nimport { NotificationBox } from './style';\nimport { BOX_HEIGHT, BOX_WIDTH } from '../consts';\nimport { useInterval } from '../utilis';\nconst availSpaceY = window.innerHeight - BOX_HEIGHT;\nconst availSpaceX = window.innerWidth - BOX_WIDTH;\n\nconst getX = () => Math.round(Math.random() * availSpaceY);\n\nconst getY = () => Math.round(Math.random() * availSpaceX);\n\nexport const Notifications = ({\n  notifications\n}) => {\n  const _useState = useState(2000),\n        _useState2 = _slicedToArray(_useState, 2),\n        delay = _useState2[0],\n        setDelay = _useState2[1];\n\n  const _useState3 = useState({\n    cat: [0, 1, 2, 3, 4, 5],\n    idx: []\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        notification = _useState4[0],\n        setNotification = _useState4[1];\n\n  const _useState5 = useState([{\n    x: getX(),\n    y: getY()\n  }]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        locations = _useState6[0],\n        setLocations = _useState6[1]; // Increment the counter.\n\n\n  useInterval(() => {\n    setLocations([...locations, {\n      x: getX(),\n      y: getY()\n    }]);\n  }, delay); // Make it faster every second!\n\n  useInterval(() => {\n    if (delay > 10) {\n      setDelay(delay / 1.5);\n    }\n  }, 10000);\n\n  const handleReset = () => {\n    setDelay(1000);\n  };\n\n  return React.createElement(React.Fragment, null, locations.map((location, idx) => React.createElement(Swipe, {\n    key: idx,\n    onSwipedLeft: () => console.log('swipe left'),\n    onSwipedRight: () => console.log('swipe right'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(NotificationBox, {\n    top: location.x,\n    left: location.y,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, locations.length))));\n};","map":{"version":3,"sources":["/Users/shem/Documents/Dev/noti-game/src/components/Noficitaions/index.js"],"names":["React","useState","Swipe","NotificationBox","BOX_HEIGHT","BOX_WIDTH","useInterval","availSpaceY","window","innerHeight","availSpaceX","innerWidth","getX","Math","round","random","getY","Notifications","notifications","delay","setDelay","cat","idx","notification","setNotification","x","y","locations","setLocations","handleReset","map","location","console","log","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,uBAAtB;AAEA,SAASC,eAAT,QAAgC,SAAhC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,WAAtC;AACA,SAASC,WAAT,QAA4B,WAA5B;AAEA,MAAMC,WAAW,GAAGC,MAAM,CAACC,WAAP,GAAqBL,UAAzC;AACA,MAAMM,WAAW,GAAGF,MAAM,CAACG,UAAP,GAAoBN,SAAxC;;AACA,MAAMO,IAAI,GAAG,MAAMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBR,WAA3B,CAAnB;;AACA,MAAMS,IAAI,GAAG,MAAMH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,WAA3B,CAAnB;;AAEA,OAAO,MAAMO,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAAA,oBACxBjB,QAAQ,CAAC,IAAD,CADgB;AAAA;AAAA,QAC3CkB,KAD2C;AAAA,QACpCC,QADoC;;AAAA,qBAEVnB,QAAQ,CAAC;AAACoB,IAAAA,GAAG,EAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAAL;AAAmBC,IAAAA,GAAG,EAAC;AAAvB,GAAD,CAFE;AAAA;AAAA,QAE3CC,YAF2C;AAAA,QAE7BC,eAF6B;;AAAA,qBAGhBvB,QAAQ,CAAC,CAAC;AAAEwB,IAAAA,CAAC,EAACb,IAAI,EAAR;AAAYc,IAAAA,CAAC,EAACV,IAAI;AAAlB,GAAD,CAAD,CAHQ;AAAA;AAAA,QAG3CW,SAH2C;AAAA,QAGhCC,YAHgC,kBAKlD;;;AACAtB,EAAAA,WAAW,CAAC,MAAM;AAChBsB,IAAAA,YAAY,CAAC,CACX,GAAGD,SADQ,EAEX;AACEF,MAAAA,CAAC,EAAEb,IAAI,EADT;AAEEc,MAAAA,CAAC,EAAEV,IAAI;AAFT,KAFW,CAAD,CAAZ;AAQD,GATU,EASRG,KATQ,CAAX,CANkD,CAiBlD;;AACAb,EAAAA,WAAW,CAAC,MAAM;AAChB,QAAIa,KAAK,GAAG,EAAZ,EAAgB;AACdC,MAAAA,QAAQ,CAACD,KAAK,GAAG,GAAT,CAAR;AACD;AACF,GAJU,EAIR,KAJQ,CAAX;;AAMA,QAAMU,WAAW,GAAG,MAAM;AACxBT,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD;;AAIA,SACE,0CAEIO,SAAS,CAACG,GAAV,CAAc,CAACC,QAAD,EAAWT,GAAX,KACZ,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEA,GAAZ;AAAiB,IAAA,YAAY,EAAE,MAAMU,OAAO,CAACC,GAAR,CAAY,YAAZ,CAArC;AAAgE,IAAA,aAAa,EAAE,MAAMD,OAAO,CAACC,GAAR,CAAY,aAAZ,CAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAiB,IAAA,GAAG,EAAEF,QAAQ,CAACN,CAA/B;AAAkC,IAAA,IAAI,EAAEM,QAAQ,CAACL,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,SAAS,CAACO,MADb,CADF,CADF,CAFJ,CADF;AAaD,CAzCM","sourcesContent":["import React, { useState } from 'react';\nimport { Swipe } from 'react-swipe-component'\n\nimport { NotificationBox } from './style';\nimport { BOX_HEIGHT, BOX_WIDTH } from '../consts';\nimport { useInterval } from '../utilis';\n\nconst availSpaceY = window.innerHeight - BOX_HEIGHT;\nconst availSpaceX = window.innerWidth - BOX_WIDTH;\nconst getX = () => Math.round(Math.random() * availSpaceY);\nconst getY = () => Math.round(Math.random() * availSpaceX);\n\nexport const Notifications = ({ notifications }) => {\n  const [delay, setDelay] = useState(2000);\n  const [notification, setNotification] = useState({cat:[0,1,2,3,4,5],idx:[]});\n  const [locations, setLocations] = useState([{ x:getX(), y:getY() }]);\n\n  // Increment the counter.\n  useInterval(() => {\n    setLocations([\n      ...locations,\n      {\n        x: getX(),\n        y: getY()\n      }\n    ]);\n\n  }, delay);\n\n  // Make it faster every second!\n  useInterval(() => {\n    if (delay > 10) {\n      setDelay(delay / 1.5);\n    }\n  }, 10000);\n\n  const handleReset = () => {\n    setDelay(1000);\n  };\n\n  return (\n    <>\n      {\n        locations.map((location, idx) => (\n          <Swipe key={idx} onSwipedLeft={() => console.log('swipe left')} onSwipedRight={() => console.log('swipe right')}>\n            <NotificationBox top={location.x} left={location.y}>\n              {locations.length}\n            </NotificationBox>\n          </Swipe>\n        ))\n      }\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}